==3421== Memcheck, a memory error detector
==3421== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3421== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==3421== Command: ./big-bits
==3421== Parent PID: 3275
==3421== 
==3421== Invalid read of size 1
==3421==    at 0x10A177: orBigBits (big-bits.c:140)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x109920: doLine (main.c:206)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421==  Address 0x4a413ff is 1 bytes before a block of size 28 alloc'd
==3421==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==3421==    by 0x109D39: newBigBits (big-bits.c:35)
==3421==    by 0x1098C5: doLine (main.c:195)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421== 
==3421== Conditional jump or move depends on uninitialised value(s)
==3421==    at 0x4838CD8: __strlen_sse2 (vg_replace_strmem.c:462)
==3421==    by 0x109DDB: normalizeBitString (big-bits.c:60)
==3421==    by 0x10A21E: orBigBits (big-bits.c:148)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x109920: doLine (main.c:206)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421== 
==3421== Conditional jump or move depends on uninitialised value(s)
==3421==    at 0x109E48: normalizeBitString (big-bits.c:57)
==3421==    by 0x10A21E: orBigBits (big-bits.c:148)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x109920: doLine (main.c:206)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421== 
==3421== Invalid read of size 1
==3421==    at 0x10A321: xorBigBits (big-bits.c:169)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x10997B: doLine (main.c:214)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421==  Address 0x4a4167f is 1 bytes before a block of size 6 alloc'd
==3421==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==3421==    by 0x109D39: newBigBits (big-bits.c:35)
==3421==    by 0x1098C5: doLine (main.c:195)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421== 
==3421== Conditional jump or move depends on uninitialised value(s)
==3421==    at 0x4838CD8: __strlen_sse2 (vg_replace_strmem.c:462)
==3421==    by 0x109DDB: normalizeBitString (big-bits.c:60)
==3421==    by 0x10A3C8: xorBigBits (big-bits.c:177)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x10997B: doLine (main.c:214)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421== 
==3421== Conditional jump or move depends on uninitialised value(s)
==3421==    at 0x109E48: normalizeBitString (big-bits.c:57)
==3421==    by 0x10A3C8: xorBigBits (big-bits.c:177)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x10997B: doLine (main.c:214)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421== 
==3421== Invalid read of size 1
==3421==    at 0x109FCD: andBigBits (big-bits.c:111)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x10994F: doLine (main.c:210)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421==  Address 0x4a418ef is 1 bytes before a block of size 36 alloc'd
==3421==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==3421==    by 0x109D39: newBigBits (big-bits.c:35)
==3421==    by 0x1098C5: doLine (main.c:195)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421== 
==3421== Conditional jump or move depends on uninitialised value(s)
==3421==    at 0x4838CD8: __strlen_sse2 (vg_replace_strmem.c:462)
==3421==    by 0x109DDB: normalizeBitString (big-bits.c:60)
==3421==    by 0x10A074: andBigBits (big-bits.c:119)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x10994F: doLine (main.c:210)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421== 
==3421== Conditional jump or move depends on uninitialised value(s)
==3421==    at 0x109E48: normalizeBitString (big-bits.c:57)
==3421==    by 0x10A074: andBigBits (big-bits.c:119)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x10994F: doLine (main.c:210)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421== 
==3421== Invalid read of size 1
==3421==    at 0x10A2CD: xorBigBits (big-bits.c:163)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x10997B: doLine (main.c:214)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421==  Address 0x4a4247f is 1 bytes before a block of size 28 alloc'd
==3421==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==3421==    by 0x109D39: newBigBits (big-bits.c:35)
==3421==    by 0x10A226: orBigBits (big-bits.c:148)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x109920: doLine (main.c:206)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421== 
==3421== Use of uninitialised value of size 8
==3421==    at 0x109E5B: normalizeBitString (big-bits.c:67)
==3421==    by 0x10A074: andBigBits (big-bits.c:119)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x10994F: doLine (main.c:210)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421== 
==3421== Invalid write of size 1
==3421==    at 0x109E5B: normalizeBitString (big-bits.c:67)
==3421==    by 0x10A074: andBigBits (big-bits.c:119)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x10994F: doLine (main.c:210)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3421== 
==3421== 
==3421== Process terminating with default action of signal 11 (SIGSEGV)
==3421==  Access not within mapped region at address 0x0
==3421==    at 0x109E5B: normalizeBitString (big-bits.c:67)
==3421==    by 0x10A074: andBigBits (big-bits.c:119)
==3421==    by 0x10968B: doOp (main.c:142)
==3421==    by 0x10994F: doLine (main.c:210)
==3421==    by 0x109C68: go (main.c:286)
==3421==    by 0x109D00: main (main.c:301)
==3421==  If you believe this happened as a result of a stack
==3421==  overflow in your program's main thread (unlikely but
==3421==  possible), you can try to increase the size of the
==3421==  main thread stack using the --main-stacksize= flag.
==3421==  The main thread stack size used in this run was 8388608.
==3421== 
==3421== HEAP SUMMARY:
==3421==     in use at exit: 1,136 bytes in 25 blocks
==3421==   total heap usage: 60 allocs, 35 frees, 11,113 bytes allocated
==3421== 
==3421== LEAK SUMMARY:
==3421==    definitely lost: 752 bytes in 16 blocks
==3421==    indirectly lost: 0 bytes in 0 blocks
==3421==      possibly lost: 0 bytes in 0 blocks
==3421==    still reachable: 384 bytes in 9 blocks
==3421==         suppressed: 0 bytes in 0 blocks
==3421== Rerun with --leak-check=full to see details of leaked memory
==3421== 
==3421== For counts of detected and suppressed errors, rerun with: -v
==3421== Use --track-origins=yes to see where uninitialised values come from
==3421== ERROR SUMMARY: 281 errors from 12 contexts (suppressed: 0 from 0)
